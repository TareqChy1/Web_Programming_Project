plugins {
	id 'org.springframework.boot' version '2.7.3'
	id 'io.spring.dependency-management' version '1.0.13.RELEASE'
	id 'java'
	id 'checkstyle'//https://docs.gradle.org/current/userguide/checkstyle_plugin.html
	id "com.github.spotbugs" version "5.0.13"//https://plugins.gradle.org/plugin/com.github.spotbugs
}

group = 'com.emse.spring'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'com.h2database:h2'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	implementation 'io.springfox:springfox-boot-starter:3.0.0'
	implementation("org.springframework.boot:spring-boot-starter-security")
	testImplementation("org.springframework.security:spring-security-test")
	spotbugsPlugins 'com.h3xstream.findsecbugs:findsecbugs-plugin:1.12.0' // https://spotbugs.readthedocs.io/en/latest/gradle.html
	spotbugs 'com.github.spotbugs:spotbugs:4.7.1'// https://github.com/spotbugs/spotbugs-gradle-plugin
}

tasks.named('test') {
	useJUnitPlatform()
}

task sourcesJar(type: Jar, dependsOn: classes) {
	classifier = 'sources'
	from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
	classifier = 'javadoc'
	from javadoc.destinationDir
}

artifacts {
	archives sourcesJar
	archives javadocJar
}


//https://se-education.org/guides/tutorials/checkstyle.html
checkstyle {
	ignoreFailures = true
	toolVersion = '10.2'
}



// https://github.com/spotbugs/spotbugs-gradle-plugin
apply plugin: 'com.github.spotbugs'
spotbugs {
	ignoreFailures = false
	showStackTraces = true
	showProgress = true
	effort = 'default'
	reportLevel = 'default'
	visitors = [ 'FindSqlInjection', 'SwitchFallthrough' ]
	omitVisitors = [ 'FindNonShortCircuit' ]
	reportsDir = file("$buildDir/spotbugs")
	onlyAnalyze = [ 'com.foobar.MyClass', 'com.foobar.mypkg.*' ]
	maxHeapSize = '1g'
	extraArgs = [ '-nested:false' ]
	jvmArgs = [ '-Duser.language=ja' ]
}



//https://github.com/spotbugs/spotbugs-gradle-plugin
spotbugsMain {
	reports {
		html {
			required = true
			outputLocation = file("$buildDir/reports/spotbugs/main.html")
			stylesheet = 'fancy-hist.xsl'
		}
	}
}


//https://github.com/spotbugs/spotbugs-gradle-plugin
spotbugsTest {
	reports {
		html {
			required = true
			outputLocation = file("$buildDir/reports/spotbugs/test.html")
			stylesheet = 'fancy-hist.xsl'
		}
	}
}